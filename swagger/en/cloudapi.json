{
  "openapi": "3.0.1",
  "info": {
    "title": "CodePay Cloud Open Api",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Integration with Point of Sale"
    },
    {
      "name": "QR Code Payment"
    },
    {
      "name": "Mobile Payment"
    },
    {
      "name": "Online Payment"
    },
    {
      "name": "Public API"
    }
  ],
  "paths": {
    "/api/entry/wisehubcloudpayorder": {
      "post": {
        "summary": "Create Order",
        "x-apifox-folder": "Integration with Point of Sale",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "The merchant backend calls this API and the CodePay server sends a message to the \"CodePay Register\" application on the payment terminal. This activates the application, displays the order for confirmation by the cashier and guides the user through the payment process.\n\nFor more information, see <a href=\"CloudMode\" target=\"_blank\">Cross-terminal Application Integration - Cloud Mode</a>",
        "tags": [
          "Integration with Point of Sale"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3f35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: wisehub.cloud.pay.order",
                    "maxLength": 32
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "302100001612"
                    ]
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "Intelligent financial terminal SN, need to be bound to the merchant store under the",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "message_receiving_application": {
                    "type": "string",
                    "description": "The message receiving application, here fixed at \"CodePay Register\".",
                    "maxLength": 32,
                    "examples": [
                      "CODEPAY_REGISTER"
                    ]
                  },
                  "pay_scenario": {
                    "type": "string",
                    "description": "Payment scene, please refer to <a href = \"ParameterDictionary#payscenario\" target=\"_blank\"> PayScenario</a>",
                    "enum": [
                      "BSCANQR_PAY",
                      "SCANQR_PAY",
                      "SWIPE_CARD"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "BSCANQR_PAY": "",
                        "SCANQR_PAY": "",
                        "SWIPE_CARD": ""
                      }
                    },
                    "maxLength": 32,
                    "examples": [
                      "BANKCARD"
                    ]
                  },
                  "pay_method_id": {
                    "type": "string",
                    "description": "To specify the use of a particular payment method, refer to <a href = \"ParameterDictionary#paymethod\" target=\"_blank\"> PayMethod</a>",
                    "examples": [
                      "Visa"
                    ]
                  },
                  "card_type": {
                    "type": "integer",
                    "description": "Type of bank card,please refer to <a href = \"./ParameterDictionary#cardtype\" target = \"_blank\">CardType</a>"
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "Denominated currencies, conforming to ISO-4217, are described by a code based on three characters, e.g.: USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The amount of the order, in the currency in which it is denominated, e.g., 1 USD for one U.S. dollar, not one U.S. cent."
                  },
                  "tip_amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Tip amount. This field represents the transaction tip amount. For example, 1 USD stands for one dollar, not one cent. <br /> <br /> <font color = \"green\">Example: 34.50</font>"
                  },
                  "on_screen_tip": {
                    "type": "boolean",
                    "description": "Whether or not to enter tips on the CodePay Rigister page, default is false, when \"trans_type=1, 3, 4\", this parameter can be set <br /><br /> <font color = \"green\">Example: true</font>",
                    "default": "false"
                  },
                  "cashback_amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Cash back amount, order amount+cash back amount=transaction amount\n\nWhen trans_type=11, the value of this parameter can be set"
                  },
                  "trans_type": {
                    "type": "integer",
                    "description": "Transaction type, refer to <a href = \"ParameterDictionary#transtype\" target=\"_blank\"> TransType </a>",
                    "examples": [
                      1
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "orig_merchant_order_no": {
                    "type": "string",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ],
                    "description": "Original trading merchant system order number, required for trans_type = 2, 3, 6"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the goods or services purchased by the customer",
                    "maxLength": 128,
                    "examples": [
                      "IPhone White X2"
                    ]
                  },
                  "attach": {
                    "type": "string",
                    "description": "Allows the merchant to submit an additional data to the gateway, which will be returned unaltered for payment notifications and queries",
                    "maxLength": 128,
                    "examples": [
                      "{“key”:”value”, “key2”:”value2”}"
                    ]
                  },
                  "notify_url": {
                    "type": "string",
                    "description": "The callback address for the merchant system to receive CodePay payment notifications, see <a href = \"CallbackNotificationNotes\" target=\"_blank\"> Callback Notification Notes</a> for details.\n\nPlease refer to <a href =\"CloudAPI#tag/Common-APIs/paths/~1%7Bmerchant_website%7D/post\" target =\"_blank\"> transaction result notification </a> for the notification message structure.",
                    "maxLength": 256,
                    "examples": [
                      "http://www.mersite.com/pay/notify"
                    ]
                  },
                  "expires": {
                    "type": "integer",
                    "examples": [
                      5
                    ],
                    "description": "Order payment timeout period, after which the order can no longer be paid or cancelled and the order will be closed, the unit of this time is: second"
                  },
                  "order_queue_mode": {
                    "type": "string",
                    "description": "Order queue mode, which sets the sorting rules for orders. When pushing multiple orders, priority is given to new or old orders.",
                    "maxLength": 8,
                    "examples": [
                      "FIFO"
                    ],
                    "enum": [
                      "FIFO",
                      "FILO"
                    ],
                    "x-apifox": {
                      "enumDescriptions": {
                        "FIFO": "first-in first-out,default value",
                        "FILO": "first-in last-out"
                      }
                    },
                    "default": "FIFO"
                  },
                  "reject_trade_when_terminal_offline": {
                    "type": "boolean",
                    "description": "Whether to reject the transaction when the terminal is offline, default is false. \n\n<font color=\"red\">Please be careful to set this value, due to the instability of the terminal network, there is a delay in the online status of the device may be, use this function please test before deciding whether to apply in your production environment</font>",
                    "default": "false"
                  },
                  "required_terminal_authentication": {
                    "type": "boolean",
                    "description": "When refund or void a transaction, does the store manager role need to authorize this operation on the terminal?  default value: false",
                    "default": "false"
                  },
                  "on_screen_signature": {
                    "type": "boolean",
                    "description": "This parameter controls the display logic of electronic signatures: <br />\n\n- true: Display the electronic signature page and print the signature information on the purchase order\n- false: The electronic signature page will not be displayed, but the signature area needs to be printed on the purchase order\n\n<font color=\"red\">But even if this parameter is set, CodePay Register still processes electronic signatures according to the following logic in the following situations: </font>\n-  Credit card network, APP does not display signature page, fixed on receipt to print signature column\n- Pin debit transactions do not require a signature, the APP does not display a signature page, and the receipt is not printed either",
                    "default": "true"
                  },
                  "api_version": {
                    "type": "string",
                    "const": "2.0",
                    "description": "Version of this API, fixed value \"2.0\"."
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "store_no",
                  "terminal_sn",
                  "message_receiving_application",
                  "pay_scenario",
                  "pay_method_id",
                  "card_type",
                  "price_currency",
                  "order_amount",
                  "tip_amount",
                  "on_screen_tip",
                  "cashback_amount",
                  "trans_type",
                  "merchant_order_no",
                  "orig_merchant_order_no",
                  "description",
                  "attach",
                  "notify_url",
                  "expires",
                  "order_queue_mode",
                  "reject_trade_when_terminal_offline",
                  "required_terminal_authentication",
                  "on_screen_signature",
                  "api_version"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "terminal_sn",
                  "message_receiving_application",
                  "price_currency",
                  "order_amount",
                  "trans_type",
                  "merchant_order_no",
                  "description",
                  "expires",
                  "api_version",
                  "pay_scenario"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "312300000969",
                "charset": "UTF-8",
                "expires": 180,
                "method": "wisehub.cloud.pay.order",
                "pay_scenario": "SWIPE_CARD",
                "store_no": "4123000007",
                "format": "JSON",
                "sign": "gtKQ3297CtMCOxsia3kd2xJsxa1AI5DH6856Zuji9YRUxja3jyXGaV5uksiyNVrpnfw6tpfie9DJLCl7xVONnakEsFGgW1IWMvzHOyPhEigllondkWtO8rSPlyjtXoabCY1r8+JyPMLvDlxBmPB/x+7ZodKOOfK4C7dPT6oMNV+FxImF5wWE1LCiI0qUERM1b3YjO+/hputjadRTUZjFMeoyy2XEGCBilzcO8DmpuEY1SBtIrRD+dg8fxjV8fnhl7KY2cfC2o88qAg5I6VzCnM4BiUIqJbDqMaXYQxUH9i+cbp63bDaVpithAEP2+q5LvyExY3xFzwgoK1Y2KRrogA==",
                "description": "IPhone 15 white X2",
                "order_queue_mode": "FIFO",
                "version": "1.0",
                "merchant_order_no": "mapp1705395833091",
                "message_receiving_application": "CodePay Register",
                "order_amount": 34.5,
                "app_id": "wz6012822ca2f1as78",
                "sign_type": "RSA2",
                "price_currency": "USD",
                "terminal_sn": "WPYC002251000042",
                "trans_type": 1,
                "timestamp": "1705395833228"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32
                    },
                    "msg": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "When an error occurs, this msg contains the error message"
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "maxLength": 16,
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message_id": {
                          "type": "string",
                          "maxLength": 32,
                          "examples": [
                            "M021000010210602000003"
                          ],
                          "description": "Message ID"
                        },
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "terminal_online_status": {
                          "type": "string",
                          "description": "Online status of the terminal",
                          "maxLength": 32,
                          "enum": [
                            "unknown",
                            "online",
                            "offline"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "unknown": "Device status unknown",
                              "online": "Device Online",
                              "offline": "Device is offline"
                            }
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "message_id",
                        "trans_no",
                        "terminal_online_status"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!\n\nFor example:\n\nCorrect format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"\n\nWrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "message_id",
                        "trans_no"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Successful Example",
                    "value": {
                      "code": "0",
                      "msg": "success",
                      "sign": "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q==",
                      "psn": "08290344008038160280",
                      "data": {
                        "message_id": "M021000010210602000003",
                        "trans_no": "5021000010210602000003",
                        "terminal_online_status": "online"
                      }
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04112",
                      "msg": "[E04112]Merchant order number repeat",
                      "psn": "08290344008038160280",
                      "sign": "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-106393520-run",
        "security": []
      }
    },
    "/api/entry/wisehubcloudpayclose": {
      "post": {
        "summary": "Close Order",
        "x-apifox-folder": "Integration with Point of Sale",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "To close the order, the merchant's backend should call this API. Then, the payment gateway will close the order and send a message to the designated application on IoT devices (such as smart POS) to clear the order from the queue.\n\nOnly pre paid orders (trans_status=9) should be actively closed using this API. If not, please use the \"CodePay Register\" application interface to cancel.\n\nFor more information, please refer to <a href=\"CloudMode\" target=\"_blank\">Cross Terminal Application Integration - Cloud Mode</a>",
        "tags": [
          "Integration with Point of Sale"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3f35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: wisehub.cloud.pay.close",
                    "maxLength": 32,
                    "examples": [
                      "wisehub.cloud.pay.close"
                    ]
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "302100001612"
                    ]
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "Intelligent financial terminal SN, need to be bound to the merchant store under the",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Reasons for closing transactions"
                  },
                  "message_receiving_application": {
                    "type": "string",
                    "description": "The message receiving application, here fixed at \"CodePay Register\"."
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "store_no",
                  "terminal_sn",
                  "merchant_order_no",
                  "description",
                  "message_receiving_application"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "terminal_sn",
                  "merchant_order_no",
                  "message_receiving_application"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "312200043123",
                "charset": "UTF-8",
                "method": "wisehub.cloud.pay.close",
                "store_no": "4122006443",
                "format": "JSON",
                "sign": "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg==",
                "version": "1.0",
                "merchant_order_no": "1217752501201407033233368018",
                "app_id": "wz3c35784c2cbe6f37",
                "sign_type": "RSA2",
                "terminal_sn": "PP85272109005865",
                "timestamp": "1693280636972"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32
                    },
                    "msg": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "When an error occurs, this msg contains the error message"
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "maxLength": 16,
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message_id": {
                          "type": "string",
                          "maxLength": 32,
                          "examples": [
                            "M021000010210602000003"
                          ],
                          "description": "Message ID"
                        },
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "terminal_online_status": {
                          "type": "string",
                          "description": "Terminal Online Status",
                          "maxLength": 32,
                          "enum": [
                            "unknown",
                            "online",
                            "offline"
                          ],
                          "x-apifox": {
                            "enumDescriptions": {
                              "unknown": "Device status unknown",
                              "online": "Device Online",
                              "offline": "Device is offline"
                            }
                          }
                        }
                      },
                      "x-apifox-orders": [
                        "message_id",
                        "trans_no",
                        "terminal_online_status"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!\n\nFor example:\n\nCorrect format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"\n\nWrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "message_id",
                        "trans_no"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Successful Example",
                    "value": {
                      "code": "0",
                      "msg": "success",
                      "sign": "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q==",
                      "psn": "08290344008038160280",
                      "data": {
                        "message_id": "M021000010210602000003",
                        "trans_no": "5021000010210602000003"
                      }
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04113",
                      "msg": "[E04113]Merchant order number error",
                      "psn": "08290344008038160280",
                      "sign": "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-106436503-run",
        "security": []
      }
    },
    "/api/entry/bscancpaysubmit": {
      "post": {
        "summary": "QR Pay(Customer-presented)",
        "x-apifox-folder": "QR Code Payment",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "After the cashier reads the barcode or QR code in the user's wallet APP with the code scanning device, the payment voucher information is transmitted to the merchant's cashier, and the merchant's cashier or merchant's back office calls this interface to initiate payment.\n\n>1. The transaction result is returned synchronously. If a \"system error\" occurs, please wait for 5 seconds, and then call [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderquery/post\" target=\"_blank\">Query Order API</a>] until payment is successful or timeout occurs (30 seconds is recommended, and the call interval is 5 seconds).\n>2. If an uncertain transaction status is returned when calling <a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderquery/post\" target=\"_blank\">[Query Order API]</a> , please cancel the order. After cancellation, successful orders will be returned, while failed orders will be closed. If the call to <a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderrevoker/post\" target=\"_blank\">[Cancel Order API]</a> returns a failure, please call again. Please note that at least 15 seconds after creating the order, the <a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderrevoker/post\" target=\"_blank\">[Cancel Order API]</a> should be called.\n\nFor detailed information, please refer to the <a href=\"QuickPayDevGuidelines\" target=\"_blank\"> QR Code Payment - Customer Presentation QR Code Product Introduction</a>\n\n",
        "tags": [
          "QR Code Payment"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: bscanc.pay.submit"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "auth_code": {
                    "type": "string",
                    "maxLength": 128,
                    "description": "Mobile wallet payment code, number or string obtained by scanning QR code/barcode"
                  },
                  "pay_method_id": {
                    "type": "string",
                    "description": "Specify the use of a certain payment method, refer to <a href=\"ParameterDictionary#paymethod\" target=\"_blank\">PayMethod</a>",
                    "examples": [
                      "Visa"
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                  },
                  "expires": {
                    "type": "integer",
                    "examples": [
                      5
                    ],
                    "description": "Order payment timeout. If the validity period is exceeded, the order cannot be paid again and will be closed. The unit of this time value is seconds"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the goods or services purchased by the customer",
                    "maxLength": 128,
                    "examples": [
                      "IPhone White X2"
                    ]
                  },
                  "attach": {
                    "type": "string",
                    "description": "Allow merchants to submit an additional data to the gateway, which will be returned as is during payment notifications and queries",
                    "maxLength": 128,
                    "examples": [
                      "{“key”:”value”, “key2”:”value2”}"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "The SN of an intelligent financial terminal needs to be bound to the merchant's store",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "term_ip": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "The IP address of the terminal. If there is no terminal, the IP address of the server can be submitted"
                  },
                  "longitude": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Geographical longitude of the terminal"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "Geographical latitude of the terminal",
                    "maxLength": 16
                  },
                  "notify_url": {
                    "type": "string",
                    "description": "The callback address for the merchant system to receive CodePay payment notifications. For details, please refer to the<a href=\"CallbackNotificationNotes\" target=\"_blank\">Callback Notification Precautions</a>\n\nPlease refer to <a href =\"CloudAPI#tag/Common-APIs/paths/~1%7Bmerchant_website%7D/post\" target =\"_blank\"> transaction result notification </a> for the notification message structure.",
                    "maxLength": 256,
                    "examples": [
                      "http://www.mersite.com/pay/notify"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "store_no",
                  "auth_code",
                  "pay_method_id",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "attach",
                  "terminal_sn",
                  "term_ip",
                  "longitude",
                  "latitude",
                  "notify_url"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "auth_code",
                  "pay_method_id",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "term_ip"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "302110041048",
                "charset": "UTF-8",
                "expires": 300,
                "method": "bscanc.pay.submit",
                "store_no": "4021000201",
                "format": "JSON",
                "sign": "Q3v4mjwRmZfuNeRi6uoFH8GKmPzUqpy5htuhVoZ5FlKXS4dhNIZ3SgD7CPRfy5L5FQ4djmnmy0zKTFM7KwU+QqfJ2znsvj4KlWqxWNnMBxMy2TyQfwBAyydffTVMi9OZBqEqCns69y5PLlEzi8poBHZhVYY8kPgCXQGe8GLXMg7x3AHWsOqgnzFhFj5B/Z8zUMaz6sKHEW+VV+7QmazrbhIulXVmCnpdHdNo1QAW19ZerJ+gallyOjFx2xvXiAfnx9EUcSDU0pzBF2kzdb8LuCloGo7jYfKewEwLyDV3UQbZ/i3UgP1rQxIg0bFVTMRfoeeA2/FuOw3rAoH3OH841g==",
                "description": "IPhone 12 5G White",
                "pay_method_id": "Alipay+",
                "notify_url": "https://www.baidu.com",
                "trans_amount": 200,
                "version": "1.0",
                "merchant_order_no": "TEST_1693882417637",
                "auth_code": "281666029913682898991367",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "price_currency": "JPY",
                "timestamp": "1693882417747"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32,
                      "examples": [
                        "0"
                      ]
                    },
                    "msg": {
                      "type": "string",
                      "description": "When an error occurs, this msg contains the error message",
                      "maxLength": 128,
                      "examples": [
                        "success"
                      ]
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "examples": [
                        "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                      ],
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
                      "maxLength": 16,
                      "examples": [
                        "08290344008038160280"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "trans_status": {
                          "type": "integer",
                          "description": "Transaction status, please refer to <a href=\"ParameterDictionary#transstatus\" target=\"_blank\">TransStatus</a>"
                        },
                        "pay_channel_trans_no": {
                          "type": "string",
                          "description": "Transaction serial number of payment channel, such as WeChat, Alipay, Visa, MasterCard and other payment platforms",
                          "maxLength": 64
                        },
                        "pay_user_account_id": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "Buyer User ID"
                        },
                        "trans_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                        },
                        "trans_fee_c": {
                          "type": "number",
                          "format": "double",
                          "description": "Service fees that customers need to pay"
                        },
                        "vat_amount": {
                          "type": "number",
                          "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                          "format": "double"
                        },
                        "paid_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "Customer's actual payment amount"
                        },
                        "discount_bmopc": {
                          "type": "number",
                          "format": "double",
                          "description": "Merchants provide customers with preferential amounts through payment channels, which will not be settled to merchants"
                        },
                        "discount_bpc": {
                          "type": "number",
                          "format": "double",
                          "description": "Discount the payment channel amount to the customer, and this portion of the funds will be settled into the merchant account"
                        },
                        "trans_end_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time of successful transaction, time zone: UTC/GMT 0, format: YYYY-MM-DD HH: mm: ss Example: 2021-06-03 12:48:51"
                        },
                        "ref_no": {
                          "type": "string",
                          "description": "Reference number for bank card transactions",
                          "maxLength": 64
                        }
                      },
                      "x-apifox-orders": [
                        "trans_no",
                        "trans_status",
                        "pay_channel_trans_no",
                        "pay_user_account_id",
                        "trans_amount",
                        "trans_fee_c",
                        "vat_amount",
                        "paid_amount",
                        "discount_bmopc",
                        "discount_bpc",
                        "trans_end_time",
                        "ref_no"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "trans_no",
                        "trans_status"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "code": "0",
                      "data": {
                        "trans_no": "50210004102309050000002",
                        "trans_end_time": "2023-09-05 02:57:30",
                        "pay_user_account_id": "2102209000001474545H6",
                        "trans_fee_c": "0",
                        "trans_amount": "200",
                        "pay_channel_trans_no": "20230905190741010000G0004578720",
                        "discount_bpc": "0",
                        "vat_amount": "0",
                        "pay_platform_trans_no": "20230905198881010004H0000505133",
                        "paid_amount": "200",
                        "trans_amount_cny": "9.95",
                        "trans_status": 2,
                        "discount_bmopc": "0"
                      },
                      "msg": "success",
                      "psn": "09050257284550801420",
                      "sign": "OpmXLxxMjZYjNo+Vk7cd8EpGzZsl6qQLHBq4wdvZt2MQ6QPzUc5sZ8xfOn2y+BC1mNnEQ473gKrbubVxSheeMy+KjVECM8KVdVRrmALuIdbCyY98aBHQOQidgwY2cER15JbAl/Ts7jHV1sJXbXyrrY/Puksmr82LB+e7srbtHvkDrUpvh4kp/72V5Tqxbsvi/VKiX5QWuZgXTSV4dWGg+hsbLPsi7zWb3vQUO7PnNaASnt+N+RLnkuVnAe8qlt4Wj181Y/a9Eu2DgZUY+qgdcl8AglaLRD7J2Q65bkVcdDueT9En6oIx09jLzbp6swihmdM/lmUwOgrxh3xcbC6uRQ=="
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "EC0000",
                      "msg": "[EC0000]The identity code is invalid.",
                      "psn": "09050253393428495770",
                      "sign": "ZPr3deBU2bg5GHpte7y86gbPQ5lWRz+ewI29NGfZEM6KnghR+oE+9OPvI34XAZckw4pgPB4oU9x2I1KzfhiiGWzf7Q/gjspFux1HwzHh2dZyxwtz44B9PX582xfqoewtYCDMXhNYmWFO3EuywHVnnyYabSHaNpH4HboHMc5DMoPeVXFxunHVMK5vxaclzEdplWLFCwYS+P9ubQUuCjucQMDaru8l1i5QPhSPfoeJdmPEA12tl+N8CSv+4zzQXwHAbpN6VEzuhwXkq3GwCzKnPvkpKMnDwMiXU79uPu8UB4QXZXB3Ypx/NuoG9J7PqGwuqMSNEDhhbnxJw7Tj2Fsitg==",
                      "success": false
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108146227-run",
        "security": []
      }
    },
    "/api/entry/cscanbpaygetqrcode": {
      "post": {
        "summary": "QR Pay(Merchant-presented)",
        "x-apifox-folder": "QR Code Payment",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "The merchant backend calls this API to create a prepayment transaction on CodePay. CodePay returns the QR code image link, and customers can complete the payment by scanning the QR code using their mobile wallet.\n\n>1. After generating a QR code and displaying it to the customer for scanning, the merchant system needs to call the order query API until the payment is successful or times out (it is recommended to timeout for 60 seconds, with a call frequency of 5 seconds).\n>2. If the transaction status is still uncertain when calling [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderquery/post\" target=\"_blank\">Query Order</a>] after the timeout period expires, please cancel the order. After cancellation, successful orders will be returned, while failed orders will be closed. If the call to [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderrevoker/post\" target=\"_blank\">Cancel Order</a>] returns a failure, please call again.\n\nFor detailed information, please refer to <a href=\"QRCodePayDevGuidelines\" target=\"_blank\">QR Code Payment - Merchant Present QR Code Product Introduction</a>",
        "tags": [
          "QR Code Payment"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: cscanb.pay.getqrcode"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "pay_method_id": {
                    "type": "string",
                    "description": "Specify the use of a certain payment method, refer to <a href=\"ParameterDictionary#paymethod\" target=\"_blank\">PayMethod</a>",
                    "examples": [
                      "Visa"
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                  },
                  "expires": {
                    "type": "integer",
                    "examples": [
                      5
                    ],
                    "description": "Order payment timeout. If the validity period is exceeded, the order cannot be paid again and will be closed. The unit of this time value is seconds"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the goods or services purchased by the customer",
                    "maxLength": 128,
                    "examples": [
                      "IPhone White X2"
                    ]
                  },
                  "attach": {
                    "type": "string",
                    "description": "Allow merchants to submit an additional data to the gateway, which will be returned as is during payment notifications and queries",
                    "maxLength": 128,
                    "examples": [
                      "{“key”:”value”, “key2”:”value2”}"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "The SN of an intelligent financial terminal needs to be bound to the merchant's store",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "term_ip": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "The IP address of the terminal. If there is no terminal, the IP address of the server can be submitted"
                  },
                  "longitude": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Geographical longitude of the terminal"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "Geographical latitude of the terminal",
                    "maxLength": 16
                  },
                  "notify_url": {
                    "type": "string",
                    "description": "The callback address for the merchant system to receive CodePay payment notifications. For details, please refer to the<a href=\"CallbackNotificationNotes\" target=\"_blank\">Callback Notification Precautions</a>\n\nPlease refer to <a href =\"CloudAPI#tag/Common-APIs/paths/~1%7Bmerchant_website%7D/post\" target =\"_blank\"> transaction result notification </a> for the notification message structure.",
                    "maxLength": 256,
                    "examples": [
                      "http://www.mersite.com/pay/notify"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "store_no",
                  "pay_method_id",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "attach",
                  "terminal_sn",
                  "term_ip",
                  "longitude",
                  "latitude",
                  "notify_url"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "pay_method_id",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "term_ip"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "312100041048",
                "charset": "UTF-8",
                "method": "cscanb.pay.getqrcode",
                "store_no": "4021000201",
                "format": "JSON",
                "sign": "EJML4t1EbY8BvUwruveoLTqwgXfgB/52nuH1x20FV9eEOBftqvZ5vmtmjhxT9HcrhKKoT10FVZHMyFSzYhL2rIMm+8Pn9ItCalKcca/0HuH8vJ4BHKAiIsgkbruE8HhG4cnQ4Tfd7h+wqT/d4cZH7f7oDMNbgy1DsbuebBAhygIbPGxF3PQNQD9zDM95jYmYLBc5EcUulHXAeZ/hU9/4QpVcKzJ9nzFpwvCeii6vGVVS8gxJmUL9lwiIXW6V5Gshvp/cmDT9jTswhd/a11l2wtbtHscrdZi63E3Tt5lAtz+yr+DV8pp0TJMG5CLMqaznsXNcI5r4tnxuMuK8ff2AXw==",
                "description": "test",
                "pay_method_id": "Alipay+",
                "trans_amount": 1,
                "version": "1.0",
                "merchant_order_no": "TEST_1693895595408",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "price_currency": "JPY",
                "timestamp": "1693895595505"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32,
                      "examples": [
                        "0"
                      ]
                    },
                    "msg": {
                      "type": "string",
                      "description": "When an error occurs, this msg contains the error message",
                      "maxLength": 128,
                      "examples": [
                        "success"
                      ]
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "examples": [
                        "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                      ],
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
                      "maxLength": 16,
                      "examples": [
                        "08290344008038160280"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "qrcode_url": {
                          "type": "string",
                          "description": "Pay for the QR code link address, convert it into a QR code image for users to scan, for example: weixin://wxpay/s/An4baqw",
                          "maxLength": 64
                        },
                        "trans_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                        },
                        "trans_fee_c": {
                          "type": "number",
                          "format": "double",
                          "description": "Service fees that customers need to pay"
                        },
                        "vat_amount": {
                          "type": "number",
                          "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                          "format": "double"
                        }
                      },
                      "x-apifox-orders": [
                        "trans_no",
                        "qrcode_url",
                        "trans_amount",
                        "trans_fee_c",
                        "vat_amount"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "trans_no",
                        "qrcode_url"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "code": "0",
                      "data": {
                        "trans_no": "50210004102309050000002",
                        "trans_end_time": "2023-09-05 02:57:30",
                        "pay_user_account_id": "2102209000001474545H6",
                        "trans_fee_c": "0",
                        "trans_amount": "200",
                        "pay_channel_trans_no": "20230905190741010000G0004578720",
                        "discount_bpc": "0",
                        "vat_amount": "0",
                        "pay_platform_trans_no": "20230905198881010004H0000505133",
                        "paid_amount": "200",
                        "trans_amount_cny": "9.95",
                        "trans_status": 2,
                        "discount_bmopc": "0"
                      },
                      "msg": "success",
                      "psn": "09050257284550801420",
                      "sign": "OpmXLxxMjZYjNo+Vk7cd8EpGzZsl6qQLHBq4wdvZt2MQ6QPzUc5sZ8xfOn2y+BC1mNnEQ473gKrbubVxSheeMy+KjVECM8KVdVRrmALuIdbCyY98aBHQOQidgwY2cER15JbAl/Ts7jHV1sJXbXyrrY/Puksmr82LB+e7srbtHvkDrUpvh4kp/72V5Tqxbsvi/VKiX5QWuZgXTSV4dWGg+hsbLPsi7zWb3vQUO7PnNaASnt+N+RLnkuVnAe8qlt4Wj181Y/a9Eu2DgZUY+qgdcl8AglaLRD7J2Q65bkVcdDueT9En6oIx09jLzbp6swihmdM/lmUwOgrxh3xcbC6uRQ=="
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04103",
                      "msg": "[E04103]Merchant does not exist",
                      "psn": "09050639431036021289",
                      "sign": "PXWAMfvSeE5ZPv2ptjTrK89bhiG1hvNvzgNu3gO63WJbsPJv/FZ4rQuna7a/wgV1pQrwXNzOFQkuILQDczJBb+TxthkRfL7ZQt9NVy4IZ2SnZQi6fdEN51rkCgfjlEmnSOJlMlM2JMNT8QVkI2gnMQmubyMzEqHY0nbw20Z39Gu1591L6C+a9kbYI1GNBSEkka5jvMOudV6PX3OdWDcwCcnRqjGZS7rQKsGG7MUyEZ2XEJzfBVjv4DA7UUSZ0dxxfAqD3mo0r17Lwwn1txbNTkUWsGswVtAsEMeHUNlIzhBUSCS37e0o5/nZ2MUEekyHFbRt24hV2rUgqlaFo97rhw=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108243380-run",
        "security": []
      }
    },
    "/api/entry/orderquery": {
      "post": {
        "summary": "Query Order",
        "x-apifox-folder": "Public API",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "This interface provides query for all payment orders. Merchants can actively query the order status through this interface to complete the next step of business logic.\n\nThe scenarios for using this API include\n>1. If there is any problem with your backend, it may lead to missed payment notification.\n>2. If there is a system failure, or the transaction status remains unclear after payment.\n>3. To monitor the payment status after triggering the \"bscanc.pay.submit\" API.\n>4. if the transaction status is unclear, for example after calling the \"cscanb.pay.getQRCode\" or \"pay.unifiedorder\" APIs.\n>5. confirm the payment status before launching the cancel order API.",
        "tags": [
          "Public API"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: order.query"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "Merchant system order number, each transaction must ensure a unique merchant_order_no and trans_no must be either, and when both exist, trans_no priority",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "trans_no": {
                    "type": "string",
                    "description": "CodePay transaction number, uniquely identifying a transaction transaction_order_no and trans_no must be either, and when both exist, trans_no priority",
                    "maxLength": 32,
                    "examples": [
                      "5021000010210602000003"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no",
                  "trans_no"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "312100041048",
                "charset": "UTF-8",
                "method": "order.query",
                "format": "JSON",
                "sign": "D2mHAJWclOpKTEiqoNV12XCVJzhS3RefjZs/y2PgXxS6qLZklxP7odqb30BK5ZOf3PSXzPYielT7fL1CwNbdHSpOhrkkrOsLXYsEgL5dcrJEfiV8dYZWnTh8pdCe4RUW6AegITNXbiQdb6GdI1sEJIUbFZbFqtR5V8LQeUuXaqFp17sF/uN0RHkhIUthAFa5il8TGnUBPsqQVvjJhv10v/DhlQZ4PtIr6SGDqaFmSBWfUoESuq6Xs2v6TB7abzORoXhw0EyvIFDqYBJVERAFUHzPoJZZsVyJaXM4mn/MJ5hE9oUtKe6R+ergAfgPNFP5+Hp//PJjrMM5iK6MXE7j1Q==",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "version": "1.0",
                "merchant_order_no": "TEST_1686732708342",
                "timestamp": "1693898084054"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32,
                      "examples": [
                        "0"
                      ]
                    },
                    "msg": {
                      "type": "string",
                      "description": "When an error occurs, this msg contains the error message",
                      "maxLength": 128,
                      "examples": [
                        "success"
                      ]
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "examples": [
                        "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                      ],
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
                      "maxLength": 16,
                      "examples": [
                        "08290344008038160280"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "trans_type": {
                          "type": "integer",
                          "description": "Transaction type, refer to <a href = \"ParameterDictionary#transtype\" target=\"_blank\"> TransType </a>.",
                          "examples": [
                            1
                          ]
                        },
                        "trans_status": {
                          "type": "integer",
                          "description": "Transaction status, please refer to <a href=\"ParameterDictionary#transstatus\" target=\"_blank\">TransStatus</a>"
                        },
                        "price_currency": {
                          "type": "string",
                          "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                          "maxLength": 8,
                          "examples": [
                            "USD"
                          ]
                        },
                        "merchant_order_no": {
                          "type": "string",
                          "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                          "maxLength": 32,
                          "examples": [
                            "1217752501201407033233368018"
                          ]
                        },
                        "order_amount": {
                          "type": "number",
                          "format": "float",
                          "examples": [
                            34.5
                          ],
                          "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                        },
                        "tip_amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Tip amount, expressed in the currency of the bid, for example, 1 USD represents 1 USD instead of 1 cent"
                        },
                        "cashback_amount": {
                          "type": "number",
                          "description": "Cashback amount. Expressed in the quoted currency, for example, One USD stands for one dollar, not one cent <br /> <br /> <font color = \"green\">Example: 10.00</font>",
                          "format": "float"
                        },
                        "trans_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                        },
                        "trans_fee_c": {
                          "type": "number",
                          "format": "double",
                          "description": "Service fees that customers need to pay"
                        },
                        "vat_amount": {
                          "type": "number",
                          "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                          "format": "double"
                        },
                        "attach": {
                          "type": "string",
                          "description": "Allow merchants to submit an additional data to the gateway, which will be returned as is during payment notifications and queries",
                          "maxLength": 128,
                          "examples": [
                            "{“key”:”value”, “key2”:”value2”}"
                          ]
                        },
                        "store_no": {
                          "type": "string",
                          "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                          "maxLength": 32,
                          "examples": [
                            "4021000008"
                          ]
                        },
                        "terminal_sn": {
                          "type": "string",
                          "description": "The SN of an intelligent financial terminal needs to be bound to the merchant's store",
                          "maxLength": 32,
                          "examples": [
                            "P327701609001412"
                          ]
                        },
                        "pay_scenario": {
                          "type": "string",
                          "description": "Transaction type, refer to <a href = \"ParameterDictionary#payscenario\" target=\"_blank\"> PayScenario</a>."
                        },
                        "pay_channel_trans_no": {
                          "type": "string",
                          "description": "Transaction serial number of payment channel, such as WeChat, Alipay, Visa, MasterCard and other payment platforms",
                          "maxLength": 64
                        },
                        "pay_user_account_id": {
                          "type": "string",
                          "maxLength": 64,
                          "description": "Buyer User ID"
                        },
                        "paid_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "Customer's actual payment amount"
                        },
                        "discount_bmopc": {
                          "type": "number",
                          "format": "double",
                          "description": "Merchants provide customers with preferential amounts through payment channels, which will not be settled to merchants"
                        },
                        "discount_bpc": {
                          "type": "number",
                          "format": "double",
                          "description": "Discount the payment channel amount to the customer, and this portion of the funds will be settled into the merchant account"
                        },
                        "trans_end_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time of successful transaction, time zone: UTC/GMT 0, format: YYYY-MM-DD HH: mm: ss Example: 2021-06-03 12:48:51"
                        },
                        "ref_no": {
                          "type": "string",
                          "description": "Reference number for bank card transactions",
                          "maxLength": 64
                        },
                        "pay_method_id": {
                          "type": "string",
                          "description": "Payment method, refer to <a href = \"ParameterDictionary#paymethod\" target=\"_blank\"> PayMethod</a>",
                          "examples": [
                            "Visa"
                          ]
                        },
                        "trans_error_code": {
                          "type": "string",
                          "description": "Transaction error code"
                        },
                        "trans_error_msg": {
                          "type": "string",
                          "description": "Short explanation of transaction errors"
                        }
                      },
                      "x-apifox-orders": [
                        "trans_no",
                        "trans_type",
                        "trans_status",
                        "price_currency",
                        "merchant_order_no",
                        "order_amount",
                        "tip_amount",
                        "cashback_amount",
                        "trans_amount",
                        "trans_fee_c",
                        "vat_amount",
                        "attach",
                        "store_no",
                        "terminal_sn",
                        "pay_scenario",
                        "pay_channel_trans_no",
                        "pay_user_account_id",
                        "paid_amount",
                        "discount_bmopc",
                        "discount_bpc",
                        "trans_end_time",
                        "ref_no",
                        "pay_method_id",
                        "trans_error_code",
                        "trans_error_msg"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "trans_no",
                        "trans_status",
                        "trans_type",
                        "price_currency",
                        "merchant_order_no",
                        "order_amount",
                        "pay_scenario"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "code": "0",
                      "data": {
                        "trans_no": "50210004102306140000003",
                        "trans_end_time": "2023-06-14 08:51:51",
                        "pay_user_account_id": "2102209000000858994F9",
                        "store_no": "4021000201",
                        "pay_scenario": "BSCANQR_PAY",
                        "pay_method_id": "Alipay+",
                        "trans_fee_c": "0",
                        "trans_amount": "200",
                        "merchant_order_no": "TEST_1686732708342",
                        "pay_channel_trans_no": "20230614190741010007G0004187182",
                        "discount_bpc": "0",
                        "vat_amount": "0",
                        "pay_platform_trans_no": "20230614198881010003B0000463071",
                        "order_amount": "200",
                        "paid_amount": "200",
                        "trans_status": 2,
                        "price_currency": "JPY",
                        "trans_type": 1,
                        "discount_bmopc": "0"
                      },
                      "msg": "success",
                      "psn": "09050714451053895687",
                      "sign": "X/kTK7T3fbUBeSAHU/F6KLcBYPouyEISuKqLBC8LnZ/IOQA1vhdfmK2fLiSv6OCEeB3Dm3fDOIpKQKhy15GgmxhDUiTEa0w3VwFbg1Qpo6eXd3MYw0vudPtBVcYeIOZNs653KshQzkIrSHLNZJhawd2Nl2E1utRmphNxqf13xQ9hFg9OQUZOiSl4zchDSiVfVlf03vIuh6Rswc7QXIVHlwTHmF1JV81x/986eV68pKIsekvn9V+qLIRJ0FpaIs5yGkDk6ZcXzAEHXwWX8k0/ntAyOz+TvpyjA6RRGt+jCTMdUlzJRINiIbFa4FzEWweUvyMVWy5fMHKzdvJyNqksrQ=="
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04111",
                      "msg": "[E04111]Merchant order number is invalid",
                      "psn": "09050716411100274711",
                      "sign": "VIh8kKVrp7UmE9Is0qMCVO3Wh5CnXF4b35knFfI6HyENuTJOzO4qOfOrgPY6ZfWtLS0PsCPQDsXvDAzCSus3fNh+srmzVwTcxM9hnsv4IRQhk9gqs6Qa/mwEIngbbmI07Gq1QCuxCH8ZqZFvx0LiumODUja/BIxULrHxjCLcFEGHYcWR419I51tJmRojv1WrGWK8IJCLr0A81o2MF7iJrD8RXmfprPrlkGTUksbuoNnwLbppmkVIbB6vP6ynJOK5Ijhl7MfhzWpBQ4U8zXcAwceUj3UZXf1ww6kaOR/yhKakNOpi3XftJIw9egZynQYQon2HrmdxZTaOdJL2pLjNCw=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108264854-run",
        "security": []
      }
    },
    "/api/entry/orderrevoker": {
      "post": {
        "summary": "Cancel Order",
        "x-apifox-folder": "Public API",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "If the payment transaction fails or the payment system times out, call the interface to cancel the transaction. If the user's payment for this order fails, the CodePay system will close the order; If the user pays successfully, the CodePay system will refund the funds for this order to the user.\n\nIf you encounter situations where the payment status is unclear, you should use this API to initiate cancellation. For transactions that have been successfully completed, if a refund is required, you should call [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderrefundsubmit/post\" target=\"_blank\"> Submit Order Refund API</a>]. It is very important to call [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderquery/post\" target=\"_blank\">Query Order API</a>] after any transaction to confirm its status. If the status is still unclear, please wait for a 15 second window after creating the original order and call the cancel order API again.",
        "tags": [
          "Public API"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3f35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: order.revoker",
                    "maxLength": 32,
                    "examples": [
                      "wisehub.cloud.pay.close"
                    ]
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "302100001612"
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "302100041048",
                "charset": "UTF-8",
                "method": "order.revoker",
                "format": "JSON",
                "sign": "W6M/IZTN+tuvvAeIhUDFECeUTRzFszOOxM+ozIqUdWw2CENO9G2z9ehfMdrktNmlP7TjFr6Ind/6DO5ZPhWaVu6Nx7K8UkicNwlu/BK4j8s+K108hzYUNQsVEE3ScvB46vyrxUIXdqG83Zvw3rK+o56tnU7YGodOuqGP20nx/emuLPZj7GBZEGrdgY0mRUmJHw951Hc0BYKLqa9jBuJbQzu4AkymyCX/9/G2KrVsaFWxoc7KR0vA/K84pLSe+JFggS6P9Xq4xjZBWqsWN60a39FtGYS9g5/ETT+vvjmyDBOW2hvRzUiEOvos77L/RteRbVnPxcciC/6IP4YEg0Zq7Q==",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "version": "1.0",
                "merchant_order_no": "TEST_1654765371046",
                "timestamp": "1693902797892"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32
                    },
                    "msg": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "When an error occurs, this msg contains the error message"
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "maxLength": 16,
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number."
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!\n\nFor example:\n\nCorrect format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"\n\nWrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Successful Example",
                    "value": {
                      "code": "0",
                      "msg": "success",
                      "sign": "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q==",
                      "psn": "08290344008038160280",
                      "data": {
                        "message_id": "M021000010210602000003",
                        "trans_no": "5021000010210602000003"
                      }
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04121",
                      "msg": "[E04121]The order is cancelled",
                      "psn": "09050833197667212900",
                      "sign": "Q7AKZ9nrLtusawXaKsgeYiiN3THQxx1cBzJfnctwfIP8rnXCkL53aQU58QUzBVaAzdZaUNHC2sust+3O+1BVy7FTmkYMBUKc4yBH13jZJB2Vgw7SeprWdnjzzGZ5z1gGUyoza7vBPSpKHCxbpFg/n5uy5BfXfC1fUK45EIB1/GOtBJ6vWiiZDjXfk040s7MFwuVDG9MlWkkVHyRhJE1fQjebRIm3TqjVpy1vLjjX3szZl3MNUdfFRpg0lkqRBTCYXc229NpV/Km962QiEWnj324SOxwMW0Nnn776IGzos51ZFTgWoYKUKhLLSnRqangbSnA70OSUGLkaQTmMPn2asw=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108303778-run",
        "security": []
      }
    },
    "/api/entry/orderrefundsubmit": {
      "post": {
        "summary": "Submit Order Refund",
        "x-apifox-folder": "Public API",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "If there's a need to issue a refund after a payment has been completed, you can request it through this API. Once the payment gateway confirms the legitimacy of the refund request, the amount will be returned to the payer in accordance with the established refund guidelines.\n\n>1. It's possible to issue multiple partial refunds using the original order number. However, the combined amount of all refunds shouldn't surpass the original payment amount. Typically, you shouldn't have more than 10 partial refunds for a single order.\n>2. After issuing a refund, you should utilize the [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderrefundquery/post\" target=\"_blank\">Query Refund</a>] API to check on its status. Remember, refunds might not be instantaneous and can be influenced by the policies of the specific payment channel.",
        "tags": [
          "Public API"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3f35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: order.refund.submit",
                    "maxLength": 32,
                    "examples": [
                      "wisehub.cloud.pay.close"
                    ]
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "302100001612"
                    ]
                  },
                  "orig_merchant_order_no": {
                    "type": "string",
                    "description": "Original CodePay transaction number orig_ Merchant_ Order_ No and orig_ Trans_ No must choose between two options",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "orig_trans_no": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Original CodePay transaction number orig_ Merchant_ Order_ No and orig_ Trans_ No must choose between two options"
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "Merchant refund request order number. Multiple refunds must have different serial numbers set and do not duplicate the original merchant order number",
                    "maxLength": 32
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "Denominated currencies, conforming to ISO-4217, are described by a code based on three characters, e.g.: USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The amount of the refunded order, expressed in the currency of the price, e.g. 1 USD means 1 U.S. dollar, not 1 U.S. cent."
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Reason for refund"
                  },
                  "notify_url": {
                    "type": "string",
                    "maxLength": 256,
                    "description": "Callback address to receive CodePay refund notifications\n\nPlease refer to <a href =\"CloudAPI#tag/Common-APIs/paths/~1%7Bmerchant_website%7D/post\" target =\"_blank\"> transaction result notification </a> for the notification message structure."
                  }
                },
                "x-apifox-refs": {},
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "orig_merchant_order_no",
                  "orig_trans_no",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "description",
                  "notify_url"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "description"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "302100041048",
                "charset": "UTF-8",
                "method": "order.refund.submit",
                "format": "JSON",
                "sign": "E2QaYadyJr6mpa8iNhjaSPqvScTJ0cIaEmvhi2oljATNY+w56x6DMFesozLkcM5cKFi7Pb565ODMESr7WY9wDE+6egcy/uKlo7J1912rYvLVajrc1SZOsh6JbQEitClJCUaCIQQOV2enaKYsBfmmi0bM6aFra2G1m2Ik8yLi/k/PsM/BQQTSVc97wRUTHU+IG0GLWI3HkvH9zFA76xA6P+bX/UD6+Khw9C3Cwsaz4uJkGN+28BrUBVUCxiuLyRCOd7DCMTJ04lOU9oBe415wGof5IQku4VHlUaJ8djUOkB4Y0/+Xn7zzIivsUS9ueUbPcyoPor+JXhorK2zavpYXgA==",
                "description": "test refund",
                "trans_amount": 100,
                "version": "1.0",
                "merchant_order_no": "TEST_16547658746871_2",
                "orig_merchant_order_no": "TEST_1654765874687",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "timestamp": "1693904002543"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32
                    },
                    "msg": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "When an error occurs, this msg contains the error message"
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "maxLength": 16,
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number."
                    },
                    "data": {
                      "type": "object",
                      "properties": {},
                      "x-apifox-orders": [],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!\n\nFor example:\n\nCorrect format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"\n\nWrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Successful Example",
                    "value": {
                      "code": "0",
                      "msg": "success",
                      "psn": "09050853244715542560",
                      "sign": "Z4FU2k2idXNJXriBLQd/Z8OLBeErxJeQvSlUqu1UpjY70C2MetBuxv7esK7M1VY7eepQ7+FVSo0dmx99tWp0lIXmka/gszkriA+RF11dom8vbbmlPNzCo3cVacTRvS8xjwVZDrk2+OhpGo3qRO+5rPRatiw/f04DNQyAC23nX7N5NS/Knq5STJTKHhj8yQUYqUD1TPbdvlCKgx12lP2VZTLEQfYWj+Av15VfCvy9EOwbcHhz6lVi127r6HlFgBxdWfrLPM5qxyK4QoAmUx7qg7XXq59Qo/IIDe6/9j9Wk5xvZ9gR0uoVJVUBc5UXNifXpJf/1PHlcSFMS9P7WwikNA==",
                      "data": {
                        "trans_no": "519018719199919",
                        "trans_amount": "100.00",
                        "trans_fee_c": "0",
                        "vat_amount": "0"
                      }
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04112",
                      "msg": "[E04112]Merchant order number repeat",
                      "psn": "09050853244715542560",
                      "sign": "Z4FU2k2idXNJXriBLQd/Z8OLBeErxJeQvSlUqu1UpjY70C2MetBuxv7esK7M1VY7eepQ7+FVSo0dmx99tWp0lIXmka/gszkriA+RF11dom8vbbmlPNzCo3cVacTRvS8xjwVZDrk2+OhpGo3qRO+5rPRatiw/f04DNQyAC23nX7N5NS/Knq5STJTKHhj8yQUYqUD1TPbdvlCKgx12lP2VZTLEQfYWj+Av15VfCvy9EOwbcHhz6lVi127r6HlFgBxdWfrLPM5qxyK4QoAmUx7qg7XXq59Qo/IIDe6/9j9Wk5xvZ9gR0uoVJVUBc5UXNifXpJf/1PHlcSFMS9P7WwikNA=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108313165-run",
        "security": []
      }
    },
    "/api/entry/orderrefundquery": {
      "post": {
        "summary": "Query Refund",
        "x-apifox-folder": "Public API",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "If a refund is required after payment is completed, you can apply for a refund through this API. Once the payment gateway confirms the legality of the refund request, the amount will be refunded to the payer according to the established refund criteria.\n\n>1. Multiple partial refunds can be made using the original order number. However, the total amount of all refunds should not exceed the original payment amount. Normally, a partial refund for an order should not exceed 50 transactions.\n>2. After a refund, you should use the [<a href=\"./CloudAPI#tag/Public-API/paths/~1api~1entry~1orderrefundquery/post\" target=\"_blank\">Query Refund</a>] API to check its status. Please remember that refunds may not be immediate and may be affected by specific payment channel policies.",
        "tags": [
          "Public API"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: order.refund.query"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "Merchant refund request order number merchant_order_no and trans_no cannot be empty at the same time and must choose between two. When both exist, trans_no priority",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "trans_no": {
                    "type": "string",
                    "description": "CodePay refund transaction number merchant_order_no and trans_no cannot be empty at the same time and must choose between two. When both exist, trans_no priority",
                    "maxLength": 32,
                    "examples": [
                      "5021000010210602000003"
                    ]
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no",
                  "trans_no"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "merchant_no": "302100002572",
                "charset": "UTF-8",
                "method": "order.refund.query",
                "format": "JSON",
                "sign": "GutzRQrBW2ZLy3KssFocqpLIyV/Z8h1SDgg4uOZikC2HmbT2RvRpkpwUwmNs2riMNb44eiT/IP6RlRiD+h2wKXt66rjhIHEAbc/yB6ib4KGumsGwiC/+mFB+oo34AOBBbHS0wuGzwm764LAyaHkjmUNsC0ojBXtER3T2gpZq6KwchMv/Ecw5y3kbnGdidIvGcbcygEXnHktz4YEJEPisXfh6PH7etpzvWloZfBdLPY6EgQCLepFIbh0Cer44gLWcfgDuIFwp6NzaW/d+3LJKJxNTTXxjKrEtopjPGm4jpd2T52o5OeIlifFKLRT74R6H4w9t0ry/JxscwvySpqFFfg==",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "version": "1.0",
                "merchant_order_no": "TEST_1623925902130_002",
                "timestamp": "1693905451835"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32,
                      "examples": [
                        "0"
                      ]
                    },
                    "msg": {
                      "type": "string",
                      "description": "When an error occurs, this msg contains the error message",
                      "maxLength": 128,
                      "examples": [
                        "success"
                      ]
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "examples": [
                        "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                      ],
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
                      "maxLength": 16,
                      "examples": [
                        "08290344008038160280"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "orig_trans_no": {
                          "type": "string",
                          "description": "The original payment transaction CodePay transaction number uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "merchant_order_no": {
                          "type": "string",
                          "description": "Merchant system refund order number, each transaction must be guaranteed to be unique",
                          "maxLength": 32,
                          "examples": [
                            "1217752501201407033233368018"
                          ]
                        },
                        "price_currency": {
                          "type": "string",
                          "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                          "maxLength": 8,
                          "examples": [
                            "USD"
                          ]
                        },
                        "order_amount": {
                          "type": "number",
                          "format": "float",
                          "examples": [
                            34.5
                          ],
                          "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                        },
                        "tip_amount": {
                          "type": "number",
                          "format": "float",
                          "description": "Tip amount, expressed in the currency of the bid, for example, 1 USD represents 1 USD instead of 1 cent"
                        },
                        "trans_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                        },
                        "trans_fee_c": {
                          "type": "number",
                          "format": "double",
                          "description": "Service fees that customers need to pay"
                        },
                        "vat_amount": {
                          "type": "number",
                          "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                          "format": "double"
                        },
                        "trans_status": {
                          "type": "integer",
                          "description": "Transaction status, please refer to <a href=\"ParameterDictionary#transstatus\" target=\"_blank\">TransStatus</a>"
                        },
                        "pay_channel_trans_no": {
                          "type": "string",
                          "description": "Transaction serial number of payment channel, such as WeChat, Alipay, Visa, MasterCard and other payment platforms",
                          "maxLength": 64
                        },
                        "trans_end_time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time of successful transaction, time zone: UTC/GMT 0, format: YYYY-MM-DD HH: mm: ss Example: 2021-06-03 12:48:51"
                        },
                        "ref_no": {
                          "type": "string",
                          "description": "Reference number for bank card transactions",
                          "maxLength": 64
                        },
                        "trans_error_code": {
                          "type": "string",
                          "description": "Transaction error code"
                        },
                        "trans_error_msg": {
                          "type": "string",
                          "description": "Short explanation of transaction errors"
                        }
                      },
                      "x-apifox-orders": [
                        "trans_no",
                        "orig_trans_no",
                        "merchant_order_no",
                        "price_currency",
                        "order_amount",
                        "tip_amount",
                        "trans_amount",
                        "trans_fee_c",
                        "vat_amount",
                        "trans_status",
                        "pay_channel_trans_no",
                        "trans_end_time",
                        "ref_no",
                        "trans_error_code",
                        "trans_error_msg"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "trans_no",
                        "trans_status",
                        "orig_trans_no",
                        "price_currency",
                        "merchant_order_no",
                        "order_amount"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "code": "0",
                      "data": {
                        "trans_no": "50210004102306140000003",
                        "trans_end_time": "2023-06-14 08:51:51",
                        "trans_fee_c": "0",
                        "trans_amount": "200",
                        "merchant_order_no": "TEST_1686732708342",
                        "pay_channel_trans_no": "20230614190741010007G0004187182",
                        "vat_amount": "0",
                        "order_amount": "200",
                        "trans_status": 2,
                        "price_currency": "JPY",
                        "trans_type": 3
                      },
                      "msg": "success",
                      "psn": "09050714451053895687",
                      "sign": "X/kTK7T3fbUBeSAHU/F6KLcBYPouyEISuKqLBC8LnZ/IOQA1vhdfmK2fLiSv6OCEeB3Dm3fDOIpKQKhy15GgmxhDUiTEa0w3VwFbg1Qpo6eXd3MYw0vudPtBVcYeIOZNs653KshQzkIrSHLNZJhawd2Nl2E1utRmphNxqf13xQ9hFg9OQUZOiSl4zchDSiVfVlf03vIuh6Rswc7QXIVHlwTHmF1JV81x/986eV68pKIsekvn9V+qLIRJ0FpaIs5yGkDk6ZcXzAEHXwWX8k0/ntAyOz+TvpyjA6RRGt+jCTMdUlzJRINiIbFa4FzEWweUvyMVWy5fMHKzdvJyNqksrQ=="
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "E04111",
                      "msg": "[E04111]Merchant order number is invalid",
                      "psn": "09050917332031092217",
                      "sign": "NYtj3Lpuq+Jx2ha/NZ0bQkaLlP8xZXdVCleAAs4/++Ro8R06WofyCOQhmWF5hdrrgTQ4jkNuZ/ov8t0U7cgyWYektagGW6Lc9TUC5METiLSfr1uY0AwmFPKj4kNqLGAhLpjgA8vTk/sKsNJLYmmtBR0IU7ET5yGnODefObyw+Ty8uNUlkdfTYOm+owu/2RQDzwCrU2DCYILoPY6C+7qIEDgjuCZPzN02gtRygkL2C5/WdgGxpFZameevFTo5HWXTWNAuv9DqU/ciAz9HfTHLB7dT/DDxIgozw7x60qwvk4sv5UmFMsyj6o4hmflmjz9T1MCDp2HSTEbOJ0eBosH2IA=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108325940-run",
        "security": []
      }
    },
    "/{merchant_website}": {
      "post": {
        "summary": "Transaction Result Notification",
        "x-apifox-folder": "Public API",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "Upon the completion of a payment or refund, CodePay will forward the transaction results and associated user details to the merchant. In such cases, it's imperative for the merchant's backend system to acknowledge this data by sending a response to the gateway payment system.\n\n>1. If the gateway payment system doesn't receive a confirmation (either a success or a timeout) from the merchant's side, it will interpret this as a missed notification. To ensure the merchant receives these notifications, the system will resend the notice periodically, with a total of 15 attempts over a 12-hour span. However, do note that the system cannot guarantee the delivery of every notification. The reminders will be sent at intervals of: 5s, 10s, 15s, 30s, 60s, 3m, 10m, 15m, three 30m intervals, and three 3h intervals.\n>2. Given the system's approach, there's a possibility that the merchant's backend will receive the same payment notification multiple times. As such, merchants need to ensure their systems are equipped to handle such duplicate notices.\n>3. The recommended way to manage this is to examine the attached payment information upon receipt of any notification. This is to determine if these details have been processed previously. If the data was already processed, simply return the previously established result. If not, process the new data and then send the response. To ensure data integrity, especially in the face of concurrent transactions, employ a transaction lock before scrutinizing the payment data.\n>4. For added security, merchants should also validate the notification's signature. This means checking if the order total mentioned in the notification matches the one recorded in the merchant's own system.\n>5. In future iterations, additional parameters may be added to notifications based on evolving business requirements. Hence, it's crucial to ensure your validation system is adaptable. Instead of having a hardcoded list of parameters for verification, your system should be able to dynamically handle parameters as provided in each notification.\n>6. Lastly, there might be instances where payment notifications are either not received or where there are signature verification issues. To counteract potential transaction oversights, it's strongly advised to implement a polling mechanism as a safeguard\n\n<font  color = \"red\">Acknowledgment: If notifications are received and processed accurately, return the string: success</font>",
        "tags": [
          "Public API"
        ],
        "parameters": [
          {
            "name": "merchant_website",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: payment.result.notify"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "trans_no": {
                    "type": "string",
                    "description": "CodePay transaction number that uniquely identifies a transaction",
                    "maxLength": 32,
                    "examples": [
                      "5021000010210602000003"
                    ]
                  },
                  "trans_type": {
                    "type": "integer",
                    "description": "Transaction type, refer to <a href = \"ParameterDictionary#transtype\" target=\"_blank\"> TransType </a>.",
                    "examples": [
                      1
                    ]
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                  },
                  "tip_amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Tip amount, expressed in the currency of the bid, for example, 1 USD represents 1 USD instead of 1 cent"
                  },
                  "cashback_amount": {
                    "type": "number",
                    "description": "Cashback amount. Expressed in the quoted currency, for example, One USD stands for one dollar, not one cent <br /> <br /> <font color = \"green\">Example: 10.00</font>",
                    "format": "float"
                  },
                  "trans_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                  },
                  "trans_fee_c": {
                    "type": "number",
                    "format": "double",
                    "description": "Service fees that customers need to pay"
                  },
                  "vat_amount": {
                    "type": "number",
                    "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                    "format": "double"
                  },
                  "attach": {
                    "type": "string",
                    "description": "Allow merchants to submit an additional data to the gateway, which will be returned as is during payment notifications and queries",
                    "maxLength": 128,
                    "examples": [
                      "{“key”:”value”, “key2”:”value2”}"
                    ]
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "The SN of an intelligent financial terminal needs to be bound to the merchant's store",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "pay_scenario": {
                    "type": "string",
                    "description": "Transaction type, refer to <a href = \"ParameterDictionary#payscenario\" target=\"_blank\"> PayScenario </a>."
                  },
                  "trans_status": {
                    "type": "integer",
                    "description": "Transaction status, please refer to <a href=\"ParameterDictionary#transstatus\" target=\"_blank\">TransStatus</a>"
                  },
                  "pay_channel_trans_no": {
                    "type": "string",
                    "description": "Transaction serial number of payment channel, such as WeChat, Alipay, Visa, MasterCard and other payment platforms",
                    "maxLength": 64
                  },
                  "pay_user_account_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Buyer User ID"
                  },
                  "paid_amount": {
                    "type": "number",
                    "format": "double",
                    "description": "Customer's actual payment amount"
                  },
                  "discount_bmopc": {
                    "type": "number",
                    "format": "double",
                    "description": "Merchants provide customers with preferential amounts through payment channels, which will not be settled to merchants"
                  },
                  "discount_bpc": {
                    "type": "number",
                    "format": "double",
                    "description": "Discount the payment channel amount to the customer, and this portion of the funds will be settled into the merchant account"
                  },
                  "trans_end_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of successful transaction, time zone: UTC/GMT 0, format: YYYY-MM-DD HH: mm: ss Example: 2021-06-03 12:48:51"
                  },
                  "ref_no": {
                    "type": "string",
                    "description": "Reference number for bank card transactions",
                    "maxLength": 64
                  },
                  "pay_method_id": {
                    "type": "string",
                    "description": "Payment method, refer to <a href = \"ParameterDictionary#paymethod\" target=\"_blank\"> PayMethod</a>",
                    "examples": [
                      "Visa"
                    ]
                  },
                  "trans_error_code": {
                    "type": "string",
                    "description": "Transaction error code"
                  },
                  "trans_error_msg": {
                    "type": "string",
                    "description": "Short explanation of transaction errors"
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no",
                  "trans_no",
                  "trans_type",
                  "price_currency",
                  "order_amount",
                  "tip_amount",
                  "cashback_amount",
                  "trans_amount",
                  "trans_fee_c",
                  "vat_amount",
                  "attach",
                  "store_no",
                  "terminal_sn",
                  "pay_scenario",
                  "trans_status",
                  "pay_channel_trans_no",
                  "pay_user_account_id",
                  "paid_amount",
                  "discount_bmopc",
                  "discount_bpc",
                  "trans_end_time",
                  "ref_no",
                  "pay_method_id",
                  "trans_error_code",
                  "trans_error_msg"
                ],
                "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                "required": [
                  "trans_no",
                  "trans_status",
                  "trans_type",
                  "price_currency",
                  "merchant_order_no",
                  "order_amount",
                  "pay_scenario",
                  "merchant_no",
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "trans_amount"
                ],
                "x-apifox-ignore-properties": []
              },
              "example": {
                "trans_end_time": "2023-03-28 10:54:48",
                "charset": "UTF-8",
                "store_no": "4100006443",
                "pay_scenario": "SWIPE_CARD",
                "sign": "xwJo6NU00GeoQMe0630kaXO7kYVM55/5DRSxXnPWTTXOgxeTTsXol39WhAyWiiJchKyT3fw3LSiLXBW+AP3YH/Oj7920JnVc7WHTMEhfGhuRHUbcoHyE0VpMTgFpltCFA6lECt2TWDD3JHt72rbYvsmDrOEH4Fd8aV0ZceJSqwr2qJBoYtxhlxuFoLgC8k5RIsPrbkT1ypCaSyL0+zynhLo6IkmtKV7U22Mb+fMcIjK9wMZbWiUGJQq4dMyUX90m2oLD5EWgCdcitwxzScJlkpEwJOE4ZnDpFwV2lwQJacqIBtHYTvpq4b21e62pwausxu7S4SUxrhU+BH1z8vJxkQ==",
                "trans_fee_c": "0",
                "discount_bpc": "0",
                "vat_amount": "0",
                "order_amount": "10",
                "app_id": "wza61f2e0da88ff7f8",
                "sign_type": "RSA2",
                "trans_status": 2,
                "price_currency": "ZAR",
                "terminal_sn": "PP30002209005865",
                "trans_type": 1,
                "timestamp": "1680001064206",
                "trans_no": "51220064312303280787009",
                "merchant_no": "317700643123",
                "method": "payment.result.notify",
                "pay_user_account_id": "430011******6161",
                "format": "JSON",
                "pay_method_id": "Visa",
                "trans_amount": "10",
                "http_request_id": "03281057441217642320",
                "version": "1.0",
                "pay_channel_trans_no": "00777000284306837100005105865001097",
                "paid_amount": "10",
                "discount_bmopc": "0"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "x-apifox-ignore-properties": [],
                  "x-apifox-orders": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": "success"
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": "system error"
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108361983-run",
        "security": []
      }
    },
    "/api/entry/payunifiedorder": {
      "post": {
        "summary": "Web Payment",
        "x-apifox-folder": "Online Payment",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "When implementing online payment, your backend system should initiate a call to the API to establish preliminary payment transactions. This will create a payment link through which users can complete their payments.\n\nThrough this process, our online cashier interface simplifies various steps for handling different payment methods. In this way, you can focus on your main business functions rather than complex payment processing.\n\nFor detailed information, please refer to the <a href=\"PCWebPayDevGuidelines\" target=\"_blank\">WEB webpage payment product introduction</a>",
        "tags": [
          "Online Payment"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: pay.unifiedorder"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "pay_method_id": {
                    "type": "string",
                    "description": "Specify the use of a certain payment method, refer to <a href=\"ParameterDictionary#paymethod\" target=\"_blank\">PayMethod</a>",
                    "examples": [
                      "Visa"
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                  },
                  "expires": {
                    "type": "integer",
                    "examples": [
                      5
                    ],
                    "description": "Order payment timeout. If the validity period is exceeded, the order cannot be paid again and will be closed. The unit of this time value is seconds"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the goods or services purchased by the customer",
                    "maxLength": 128,
                    "examples": [
                      "IPhone White X2"
                    ]
                  },
                  "attach": {
                    "type": "string",
                    "description": "Allow merchants to submit an additional data to the gateway, which will be returned as is during payment notifications and queries",
                    "maxLength": 128,
                    "examples": [
                      "{“key”:”value”, “key2”:”value2”}"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "The SN of an intelligent financial terminal needs to be bound to the merchant's store",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "term_ip": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "The IP address of the terminal. If there is no terminal, the IP address of the server can be submitted"
                  },
                  "longitude": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Geographical longitude of the terminal"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "Geographical latitude of the terminal",
                    "maxLength": 16
                  },
                  "return_url": {
                    "type": "string",
                    "description": "URL of front-end redirect user page",
                    "maxLength": 256
                  },
                  "notify_url": {
                    "type": "string",
                    "description": "The callback address for the merchant system to receive CodePay payment notifications. For details, please refer to the<a href=\"CallbackNotificationNotes\" target=\"_blank\">Callback Notification Precautions</a>\n\nPlease refer to <a href =\"CloudAPI#tag/Common-APIs/paths/~1%7Bmerchant_website%7D/post\" target =\"_blank\"> transaction result notification </a> for the notification message structure.",
                    "maxLength": 256,
                    "examples": [
                      "http://www.mersite.com/pay/notify"
                    ]
                  },
                  "terminal_type": {
                    "type": "string",
                    "const": "WEB",
                    "description": "Terminal type, fixed value: WEB"
                  },
                  "language": {
                    "type": "string",
                    "description": "The language displayed on the cashier interface is referenced in <a href=\"./dictionary#language\" target=\"_blank\">Language</a>."
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "store_no",
                  "pay_method_id",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "attach",
                  "terminal_sn",
                  "term_ip",
                  "longitude",
                  "latitude",
                  "return_url",
                  "notify_url",
                  "terminal_type",
                  "language"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "term_ip",
                  "return_url",
                  "terminal_type"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "terminal_type": "WEB",
                "merchant_no": "302100041048",
                "charset": "UTF-8",
                "expires": 300,
                "method": "pay.unifiedorder",
                "store_no": "4022000019",
                "format": "JSON",
                "sign": "Gfv1kSMeNHFISPhOEU3dTJlBnqBlCJ6c1f5jU2e7Foco5gFNvBJn9iocLq2tGf3hNWYbgqpk35Jl0dDYKPTgDtmoTxW2M//aPGWsDxfdLaOz5NUgwx2G9uMWydfGxQA3QYzC6FLq58YLF4SzDCXASvT2Zlvy2KcAR/loFCITOpjtP5O1W50nWZepTprhIZAqpBC5Tvq9TKcj+Lb2IJAqrJkKliFzYxR2nu+tsfXoyME37VtNaj1WFY8sGbrzU9PNdL2lm/H94IUFM2mSRu1lc77lDOysxZwLEiyN8mQq2LgRrPlTyMQ3SHRvrB9joIA1kx91FFPsU6PqgTD8augO9g==",
                "description": "IPhone 12 5G White",
                "pay_method_id": "Alipay+",
                "trans_amount": 1,
                "version": "1.0",
                "merchant_order_no": "TEST_1693979057469",
                "return_url": "https://www.baidu.com",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "price_currency": "JPY",
                "timestamp": "1693979057656"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32,
                      "examples": [
                        "0"
                      ]
                    },
                    "msg": {
                      "type": "string",
                      "description": "When an error occurs, this msg contains the error message",
                      "maxLength": 128,
                      "examples": [
                        "success"
                      ]
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "examples": [
                        "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                      ],
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
                      "maxLength": 16,
                      "examples": [
                        "08290344008038160280"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "pay_url": {
                          "type": "string",
                          "description": "Web payment link address, merchant system front-end jump to the page, start the payment process",
                          "maxLength": 64
                        },
                        "trans_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                        },
                        "trans_fee_c": {
                          "type": "number",
                          "format": "double",
                          "description": "Service fees that customers need to pay"
                        },
                        "vat_amount": {
                          "type": "number",
                          "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                          "format": "double"
                        }
                      },
                      "x-apifox-orders": [
                        "trans_no",
                        "pay_url",
                        "trans_amount",
                        "trans_fee_c",
                        "vat_amount"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "trans_no",
                        "pay_url"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "code": "0",
                      "data": {
                        "pay_url": "https://open-sea-global.alipayplus.com/api/open/v1/ac/cashier/self/codevalue/checkout.htm?codeValue=281666040098XYPf7PzAu8YvSe9gDy32sOYn&loadMode=2"
                      },
                      "msg": "success",
                      "psn": "09060544199400731500",
                      "sign": "fD/HAMdtVCp0pSdvUrdTZdCMHDXbd4H7pSYnFyDqFADbYtR01RBc3P9IsdQY8WznTd7MC9wBHkXktxrm7wn1sWGE3SCfLXO5JATMoh9f2zjU6vZ0GA8PdYyapVkOZvbFUBj9XRWGBT3zXB3fyGw58FLvKRDaFDCVVhuk06rKvBdr/wV01ZBQ99bCG/ZYbUj1NpwUR67Twk5tnCa5tU75agY8BG8t6fjsgyQnAOY0WhZykxUrvEBlpnorDuMPjRcoQ6ShBCq7QqjIUA2x1DrbuO+YojfM7/RGeoquWTQbceqwPNzrQjReIgDJT1Oviov3Xk4EA54hi5QgBhKR1ascLA=="
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "SYS013",
                      "msg": "[SYS013]parameter error:order_amount or trans_amount",
                      "psn": "09060549451789549845",
                      "sign": "gDzst6zsmBwcZuoDfmajw2Sc0nQSLqTozVB1zyLt82mITrVIpw0FFa9825bNAdUwqCqeR6EbHtK9gt+ZrNjmMTMVeS0t1sSL6YGjHQdfS8GKxkZ8u4VePRt5+oRTfaSG2iHiuPvxaKtG6A/mB1dVNqI73U5BSuMNgbGMifBcyr2FkFYJwLTcWLxh60T8ypxmcNSO9MnyJo+NQsHv3bel/bMmfUm7izGv176ZHcpwV7DjGCeTzUU+E9ywZ44H6tzZioun1DjjeshpbSkYAOFz8Mo9FlnekQam2wTWmUwgKe9Ez17wyuY3/zq9eJJURRvgKPUxFItRUjoVioNW1mmiAw=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108547942-run",
        "security": []
      }
    },
    "/api/entry/h5pay": {
      "post": {
        "summary": "Wap Payment",
        "x-apifox-folder": "Mobile Payment",
        "x-apifox-status": "developing",
        "deprecated": false,
        "description": "The merchant displays goods or services on the mobile website, and then calls this interface to get the page address of the CodePay payment cashier. The user enters the CodePay mobile checkout, confirms the order, and completes the payment. The CodePay mobile checkout platform aggregates web payment functions provided by multiple payment channels, allowing for the collection of various payment methods.\n\nFor detailed information, please refer to the <a href=\"MobileWebPayDevGuidelines\" target=\"_blank\">Mobile Web Payment Product Introduction</a>",
        "tags": [
          "Mobile Payment"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "string",
                    "description": "ID assigned by the gateway to the accessing application to identify the developer, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "wz3c35784c2cbe6f37"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Request data format, only supports JSON",
                    "maxLength": 4,
                    "const": "JSON",
                    "examples": [
                      "JSON"
                    ]
                  },
                  "charset": {
                    "type": "string",
                    "description": "The encoding format used for the request, only UTF-8 is supported",
                    "maxLength": 8,
                    "const": "UTF-8",
                    "examples": [
                      "UTF-8"
                    ]
                  },
                  "sign_type": {
                    "type": "string",
                    "description": "Signature algorithm, currently only RSA2 is supported",
                    "maxLength": 8,
                    "const": "RSA2",
                    "examples": [
                      "RSA2"
                    ]
                  },
                  "sign": {
                    "type": "string",
                    "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details",
                    "maxLength": 128,
                    "examples": [
                      "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
                    ]
                  },
                  "version": {
                    "type": "string",
                    "description": "Version number, fixed value: 1.0",
                    "maxLength": 16,
                    "const": "1.0",
                    "examples": [
                      "1.0"
                    ]
                  },
                  "timestamp": {
                    "type": "integer",
                    "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
                    "format": "long",
                    "examples": [
                      1693280636972
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Interface method, fixed value for this API: pay.unifiedorder"
                  },
                  "merchant_no": {
                    "type": "string",
                    "description": "Merchant number, obtained after registering as a merchant, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32
                  },
                  "store_no": {
                    "type": "string",
                    "description": "Store number, obtained after registering the store, see <a href=\"GatewayOverview\" target=\"_blank\">Parameters to get</a>",
                    "maxLength": 32,
                    "examples": [
                      "4021000008"
                    ]
                  },
                  "pay_method_id": {
                    "type": "string",
                    "description": "Specify the use of a certain payment method, refer to <a href=\"ParameterDictionary#paymethod\" target=\"_blank\">PayMethod</a>",
                    "examples": [
                      "Visa"
                    ]
                  },
                  "merchant_order_no": {
                    "type": "string",
                    "description": "The internal order number of the merchant system must be within 32 characters and can only be a number, uppercase and lowercase letters _ - | * @, And unique under the same merchant<br />\n<font color=\"green\">Example value: 1217752501201407033233368018</font>",
                    "maxLength": 32,
                    "examples": [
                      "1217752501201407033233368018"
                    ]
                  },
                  "price_currency": {
                    "type": "string",
                    "description": "List currency, in accordance with ISO-4217 standard, described using a three character code, such as USD",
                    "maxLength": 8,
                    "examples": [
                      "USD"
                    ]
                  },
                  "order_amount": {
                    "type": "number",
                    "format": "float",
                    "examples": [
                      34.5
                    ],
                    "description": "The order amount is expressed in the listed currency, for example, 1 USD represents 1 USD instead of 1 cent"
                  },
                  "expires": {
                    "type": "integer",
                    "examples": [
                      5
                    ],
                    "description": "Order payment timeout. If the validity period is exceeded, the order cannot be paid again and will be closed. The unit of this time value is seconds"
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the goods or services purchased by the customer",
                    "maxLength": 128,
                    "examples": [
                      "IPhone White X2"
                    ]
                  },
                  "attach": {
                    "type": "string",
                    "description": "Allow merchants to submit an additional data to the gateway, which will be returned as is during payment notifications and queries",
                    "maxLength": 128,
                    "examples": [
                      "{“key”:”value”, “key2”:”value2”}"
                    ]
                  },
                  "terminal_sn": {
                    "type": "string",
                    "description": "The SN of an intelligent financial terminal needs to be bound to the merchant's store",
                    "maxLength": 32,
                    "examples": [
                      "P327701609001412"
                    ]
                  },
                  "term_ip": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "The IP address of the terminal. If there is no terminal, the IP address of the server can be submitted"
                  },
                  "longitude": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Geographical longitude of the terminal"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "Geographical latitude of the terminal",
                    "maxLength": 16
                  },
                  "return_url": {
                    "type": "string",
                    "description": "URL of front-end redirect user page",
                    "maxLength": 256
                  },
                  "notify_url": {
                    "type": "string",
                    "description": "The callback address for the merchant system to receive CodePay payment notifications. For details, please refer to the<a href=\"CallbackNotificationNotes\" target=\"_blank\">Callback Notification Precautions</a>\n\nPlease refer to <a href =\"CloudAPI#tag/Common-APIs/paths/~1%7Bmerchant_website%7D/post\" target =\"_blank\"> transaction result notification </a> for the notification message structure.",
                    "maxLength": 256,
                    "examples": [
                      "http://www.mersite.com/pay/notify"
                    ]
                  },
                  "terminal_type": {
                    "type": "string",
                    "description": "Terminal type, fixed value: WAP",
                    "const": "WAP"
                  },
                  "language": {
                    "type": "string",
                    "description": "The language displayed on the cashier interface is referenced in <a href=\"./dictionary#language\" target=\"_blank\">Language</a>."
                  }
                },
                "x-apifox-orders": [
                  "app_id",
                  "format",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "store_no",
                  "pay_method_id",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "attach",
                  "terminal_sn",
                  "term_ip",
                  "longitude",
                  "latitude",
                  "return_url",
                  "notify_url",
                  "terminal_type",
                  "language"
                ],
                "required": [
                  "app_id",
                  "charset",
                  "sign_type",
                  "sign",
                  "version",
                  "format",
                  "timestamp",
                  "method",
                  "merchant_no",
                  "merchant_order_no",
                  "price_currency",
                  "order_amount",
                  "expires",
                  "description",
                  "term_ip",
                  "return_url",
                  "terminal_type"
                ],
                "x-apifox-refs": {},
                "x-apifox-ignore-properties": []
              },
              "example": {
                "terminal_type": "WAP",
                "merchant_no": "302100041048",
                "charset": "UTF-8",
                "expires": 300,
                "method": "pay.unifiedorder",
                "store_no": "4022000019",
                "format": "JSON",
                "sign": "Gfv1kSMeNHFISPhOEU3dTJlBnqBlCJ6c1f5jU2e7Foco5gFNvBJn9iocLq2tGf3hNWYbgqpk35Jl0dDYKPTgDtmoTxW2M//aPGWsDxfdLaOz5NUgwx2G9uMWydfGxQA3QYzC6FLq58YLF4SzDCXASvT2Zlvy2KcAR/loFCITOpjtP5O1W50nWZepTprhIZAqpBC5Tvq9TKcj+Lb2IJAqrJkKliFzYxR2nu+tsfXoyME37VtNaj1WFY8sGbrzU9PNdL2lm/H94IUFM2mSRu1lc77lDOysxZwLEiyN8mQq2LgRrPlTyMQ3SHRvrB9joIA1kx91FFPsU6PqgTD8augO9g==",
                "description": "IPhone 12 5G White",
                "pay_method_id": "Alipay+",
                "trans_amount": 1,
                "version": "1.0",
                "merchant_order_no": "TEST_1693979057469",
                "return_url": "https://www.baidu.com",
                "app_id": "wz9f2a175d0e0ef632",
                "sign_type": "RSA2",
                "price_currency": "JPY",
                "timestamp": "1693979057656"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code, 0 means the request was successful, other means failure",
                      "maxLength": 32,
                      "examples": [
                        "0"
                      ]
                    },
                    "msg": {
                      "type": "string",
                      "description": "When an error occurs, this msg contains the error message",
                      "maxLength": 128,
                      "examples": [
                        "success"
                      ]
                    },
                    "sign": {
                      "type": "string",
                      "maxLength": 128,
                      "examples": [
                        "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
                      ],
                      "description": "Interface signature identifier, used to determine the authenticity of a merchant to prevent tampering with messages, see <a href=\"Sign\" target=\"_blank\">Signature Specification</a> for more details"
                    },
                    "psn": {
                      "type": "string",
                      "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
                      "maxLength": 16,
                      "examples": [
                        "08290344008038160280"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trans_no": {
                          "type": "string",
                          "description": "CodePay transaction number that uniquely identifies a transaction",
                          "maxLength": 32,
                          "examples": [
                            "5021000010210602000003"
                          ]
                        },
                        "pay_url": {
                          "type": "string",
                          "description": "Web payment link address, merchant system front-end jump to the page, start the payment process",
                          "maxLength": 64
                        },
                        "trans_amount": {
                          "type": "number",
                          "format": "double",
                          "description": "In most cases, the order amount and transaction amount are equal. When customers are required to pay service fees and consumption taxes, the transaction amount is greater than the order amount"
                        },
                        "trans_fee_c": {
                          "type": "number",
                          "format": "double",
                          "description": "Service fees that customers need to pay"
                        },
                        "vat_amount": {
                          "type": "number",
                          "description": "VAT: Abbreviation for Value added Tax, which is a payment channel that collects value-added tax from merchants in accordance with local government laws and regulations",
                          "format": "double"
                        }
                      },
                      "x-apifox-orders": [
                        "trans_no",
                        "pay_url",
                        "trans_amount",
                        "trans_fee_c",
                        "vat_amount"
                      ],
                      "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!For example:Correct format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"Wrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
                      "required": [
                        "trans_no",
                        "pay_url"
                      ],
                      "x-apifox-ignore-properties": []
                    }
                  },
                  "x-apifox-orders": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "required": [
                    "code",
                    "msg",
                    "sign",
                    "psn",
                    "data"
                  ],
                  "x-apifox-refs": {},
                  "x-apifox-ignore-properties": []
                },
                "examples": {
                  "1": {
                    "summary": "Success Example",
                    "value": {
                      "code": "0",
                      "data": {
                        "pay_url": "https://open-sea-global.alipayplus.com/api/open/v1/ac/cashier/self/codevalue/checkout.htm?codeValue=281666040098XYPf7PzAu8YvSe9gDy32sOYn&loadMode=2"
                      },
                      "msg": "success",
                      "psn": "09060544199400731500",
                      "sign": "fD/HAMdtVCp0pSdvUrdTZdCMHDXbd4H7pSYnFyDqFADbYtR01RBc3P9IsdQY8WznTd7MC9wBHkXktxrm7wn1sWGE3SCfLXO5JATMoh9f2zjU6vZ0GA8PdYyapVkOZvbFUBj9XRWGBT3zXB3fyGw58FLvKRDaFDCVVhuk06rKvBdr/wV01ZBQ99bCG/ZYbUj1NpwUR67Twk5tnCa5tU75agY8BG8t6fjsgyQnAOY0WhZykxUrvEBlpnorDuMPjRcoQ6ShBCq7QqjIUA2x1DrbuO+YojfM7/RGeoquWTQbceqwPNzrQjReIgDJT1Oviov3Xk4EA54hi5QgBhKR1ascLA=="
                    }
                  },
                  "2": {
                    "summary": "Failure Example",
                    "value": {
                      "code": "SYS013",
                      "msg": "[SYS013]parameter error:order_amount or trans_amount",
                      "psn": "09060549451789549845",
                      "sign": "gDzst6zsmBwcZuoDfmajw2Sc0nQSLqTozVB1zyLt82mITrVIpw0FFa9825bNAdUwqCqeR6EbHtK9gt+ZrNjmMTMVeS0t1sSL6YGjHQdfS8GKxkZ8u4VePRt5+oRTfaSG2iHiuPvxaKtG6A/mB1dVNqI73U5BSuMNgbGMifBcyr2FkFYJwLTcWLxh60T8ypxmcNSO9MnyJo+NQsHv3bel/bMmfUm7izGv176ZHcpwV7DjGCeTzUU+E9ywZ44H6tzZioun1DjjeshpbSkYAOFz8Mo9FlnekQam2wTWmUwgKe9Ez17wyuY3/zq9eJJURRvgKPUxFItRUjoVioNW1mmiAw=="
                    }
                  }
                }
              }
            }
          }
        },
        "x-run-in-apifox": "https://apifox.com/web/project/3216071/apis/api-108560338-run",
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "Response common body": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Status code, 0 means the request was successful, other means failure",
            "maxLength": 32,
            "examples": [
              "0"
            ]
          },
          "msg": {
            "type": "string",
            "description": "When an error occurs, this msg contains the error message",
            "maxLength": 128,
            "examples": [
              "success"
            ]
          },
          "sign": {
            "type": "string",
            "maxLength": 128,
            "examples": [
              "ARdktgKALtjqOoE9iPBcIt4n9jCz1VDV5q/qTRkmDMzU85xsf4RE4Mhffo4ccq95WBfu9sWQd2JswQKI9Qhln9qH/FzatuddMdfMCkOCO5i4L67A4RZEmF3+32XX6HzKOSPgzsV6syJ56EUu6ivFNPznJn6bt8buG4hljzoEc5ogEl+kn87EhXA+LpEyzJkgLI8ZhH7j6iMQlOeyYRjJ0pVMe7OZfIYOeULp3GfsUamj3ezWVZS/70d2irtxg4c9wsTcBe3dusmQpFfdzAUNuILINWFRj/LEiYWOIeU4DyAU9wBKLWJpyEtok1EUFpWmJJwhEeNQen5mwsJq4Nwv7Q=="
            ],
            "description": "Interface signature identifier, used to determine the authenticity of CodePay and prevent tampering of the message, see <a href=\"sign\" target=\"_blank\">Signature Specification</a> for details"
          },
          "psn": {
            "type": "string",
            "description": "Return message sequence number, used to trace the request link, when you need CodePay technician's assistance in troubleshooting, please provide this tracking number.",
            "maxLength": 16,
            "examples": [
              "08290344008038160280"
            ]
          },
          "data": {
            "type": "object",
            "properties": {},
            "x-apifox-orders": [],
            "description": "Response business data, in the actual request, this parameter is always returned to a JSON string, the sample message in this document is not converted to a string, in order to facilitate the view, the actual return message in order to sign the processing to solve the problem of JSON disorder, will do special processing, please take the actual response to the message shall prevail!\n\nFor example:\n\nCorrect format data = \"{\\\\\\\"k1\\\\\\\":\\\\\\\"v1\\\\\\\",\\\\\"k2\\\\\\\":\\\\\"v2\\\\\"}\"\n\nWrong format: data = {\"k1\": \"v1\", \"k2\": \"v2\"}",
            "x-apifox-ignore-properties": []
          }
        },
        "x-apifox-orders": [
          "code",
          "msg",
          "sign",
          "psn",
          "data"
        ],
        "required": [
          "code",
          "msg",
          "sign",
          "psn",
          "data"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": ""
      },
      "Request common body": {
        "type": "object",
        "properties": {
          "app_id": {
            "type": "string",
            "description": "ID assigned by the gateway to the accessing application to identify the developer",
            "maxLength": 32,
            "examples": [
              "wz3c35784c2cbe6f37"
            ]
          },
          "format": {
            "type": "string",
            "description": "Request data format, only supports JSON",
            "maxLength": 4,
            "const": "JSON",
            "examples": [
              "JSON"
            ]
          },
          "charset": {
            "type": "string",
            "description": "The encoding format used for the request, only UTF-8 is supported",
            "maxLength": 8,
            "const": "UTF-8",
            "examples": [
              "UTF-8"
            ]
          },
          "sign_type": {
            "type": "string",
            "description": "Signature algorithm, currently only RSA2 is supported",
            "maxLength": 8,
            "const": "RSA2",
            "examples": [
              "RSA2"
            ]
          },
          "sign": {
            "type": "string",
            "description": "Interface signature identifier, used to determine the authenticity of the merchant, to prevent tampering with the message, see <a href=\"sign\" target=\"_blank\">Signature specification</a> for details",
            "maxLength": 128,
            "examples": [
              "VD3AnpSR08BALF7U+A22kVCJOisv9WCCZJ1TGZSmM2lwhixKIi/uUPVYcB6gODbIsBmwJ2Cw9TtI/JiXJFPlJALLncrWTtxKeTxYWhkmnteiih6GhFw1hoFJqxJFgWoLXQI/pvZJr8NognBJjHE56uXBjqIyVanPaXvy3Xb47Cnbt29am7DuQJOyrylfGklbmZQW+kkMjrD4vhrPjvIaebSvkumL5CTOv5uXORYVVijd9UqOMZzTQjilpnH0In2+qZBsY/5if4ZCduFFItf31GRiJOh9WkR0nCiVJjt8y6eSs4Ms2FS9ZiISWgMMSwrkgqYAAJm4GpaP9UUAkmuGVg=="
            ]
          },
          "version": {
            "type": "string",
            "description": "Version number, fixed value: 1.0",
            "maxLength": 16,
            "const": "1.0",
            "examples": [
              "1.0"
            ]
          },
          "timestamp": {
            "type": "integer",
            "description": "Timestamp of when the request was sent, 13 digits in length, can't be more than 15 minutes ago or later",
            "format": "long",
            "examples": [
              1693280636972
            ]
          }
        },
        "title": "Request common body",
        "x-apifox-orders": [
          "app_id",
          "format",
          "charset",
          "sign_type",
          "sign",
          "version",
          "timestamp"
        ],
        "required": [
          "app_id",
          "charset",
          "sign_type",
          "sign",
          "version",
          "format",
          "timestamp"
        ],
        "x-apifox-ignore-properties": [],
        "x-apifox-folder": ""
      }
    },
    "securitySchemes": {}
  },
  "servers": [
    {
      "url": "https://open.codepay.us",
      "description": "CodePay Server"
    }
  ]
}